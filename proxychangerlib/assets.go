// Code generated by go-bindata.
// sources:
// proxychangerlib/assets/config.glade
// proxychangerlib/assets/proxy.glade
// DO NOT EDIT!

package proxychangerlib

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x1d\x6d\x73\xdb\x2c\xf2\xfb\xf3\x2b\x74\xfe\x7a\xe3\xa6\x69\x9f\xa7\xd7\x9b\x49\xd2\x69\xd3\xb4\x93\xb9\x4e\xdb\x49\xd2\xeb\x47\x0d\x96\xb0\xcd\x45\x16\x3a\x84\xf3\x72\xbf\xfe\x56\x20\xcb\x2f\x02\x04\xc8\x4e\xe4\x58\x9f\x12\x59\xec\x02\xfb\xc6\xee\xb2\xa0\x93\x0f\x0f\xb3\x24\xb8\xc3\x2c\x27\x34\x3d\x1d\x1c\xbf\x7a\x3d\x08\x70\x1a\xd1\x98\xa4\x93\xd3\xc1\xaf\x9b\x2f\xc3\xf7\x83\x0f\x67\x7f\x9c\xfc\x6d\x38\x0c\xbe\xe2\x14\x33\xc4\x71\x1c\xdc\x13\x3e\x0d\x26\x09\x8a\x71\xf0\xf6\xd5\xf1\xfb\x57\x6f\x83\xe1\x10\x1a\x91\x94\x63\x36\x46\x11\x0e\x62\x3a\x43\x04\xf0\x65\x8c\x3e\x3c\x46\x53\x94\x4e\x30\x1b\x9c\xfd\x11\x04\x27\x0c\xff\x77\x4e\x18\xce\x83\x84\x8c\x4e\x07\x13\x7e\xfb\xf7\xc1\xb2\x7b\x40\xf6\x66\x70\x24\xda\xd1\xd1\x7f\x70\xc4\x83\x28\x41\x79\x7e\x3a\xf8\xca\x6f\xbf\x91\x9c\x5f\x73\xca\xf0\x20\x20\xf1\xe9\x20\x81\xc7\xbc\x78\x0c\x51\x96\xe5\x02\x37\x40\x45\x34\x99\xcf\xd2\x5c\x3e\xc1\x73\x31\x6c\xf9\xdb\x30\x45\x33\x1c\xcc\xe7\x24\x16\x63\x2d\xdf\xcb\x77\x01\x7f\xcc\x30\x0c\x06\x06\xca\x10\x63\xe8\x51\x8e\x41\x89\x21\x26\x79\x96\xa0\xc7\x76\x48\x70\x8a\x46\x09\x36\x8c\x64\x44\x69\x82\x51\x6a\x1a\x07\xce\x23\x46\x32\x0e\x74\x73\x18\xcb\xc9\xd1\x0a\x85\x4e\x8e\x24\x91\x1d\xe9\x4d\xb2\x30\xa5\xe1\x0c\xf1\x68\x6a\x4b\xf6\x45\xfb\xb0\x2d\xf5\x2b\x44\xee\x6c\x58\x9b\x3a\x3c\xc6\x88\xa3\x0a\x96\xd1\xfb\xc5\xff\x12\x93\x98\xf3\xeb\xc1\xd9\x2d\xc6\x99\x80\x54\xbc\x3e\x1e\x04\x9c\xa1\x34\x4f\x00\x13\xb0\xf3\x74\xf0\x88\x41\x10\xff\x05\x10\x41\x34\x67\x0c\xa7\x3c\x10\xf2\xbf\x06\x7f\x72\xb4\xd2\x97\xbe\xdf\x18\xa3\x88\x93\x3b\xd0\x36\xb7\xde\x3f\x57\x70\xe6\xbe\x4f\x8e\x16\xf3\xf7\x94\x82\x84\x4e\xc2\x04\xdf\xe1\xc4\x56\x06\x44\xe3\xd6\x02\x20\xb1\x3c\x15\xf7\x7f\x7d\xbf\xfe\x79\x71\x7e\xf9\xe5\xf2\xe2\xb3\x1b\x1b\x74\x80\x96\xdc\xbf\xb9\xfa\x78\x7e\xe1\xd6\x63\x1d\xc4\xb2\xaf\xcf\x17\x9f\x7e\x7d\x75\x14\xb2\x1a\x88\x65\x5f\x97\xdf\xbf\xfc\x70\xeb\xaa\x06\x61\xd9\xd3\xef\x8f\x57\xdf\x2f\xbf\x3b\xce\x4b\x05\x64\xd9\xdf\xc5\xd5\xd5\x8f\x2b\xb7\xde\xea\x20\x96\x7d\x9d\x5f\x5d\xde\x5c\x9e\x7f\xfc\xe6\xd6\x9d\x12\x6a\x9b\x16\xa1\xb0\x37\x04\x77\x7a\x29\x76\x58\xfe\x6e\xf0\x03\xff\x34\x1f\x8f\xc1\x6f\x11\xf3\xe4\xf0\x3c\x12\xcf\x62\xa2\x8f\xa1\xf4\x6a\x42\xb9\x0a\x2f\x26\x9d\x93\x49\x8a\x92\xa0\x18\xde\xe9\x40\xb6\x88\x07\x01\xfc\x8d\x13\xcc\x4e\x07\x34\x0d\xcd\x78\xc2\x0a\x26\xbf\x07\xbf\x06\x43\xc7\x29\x2d\x3d\xa2\x76\xc3\x5d\x2e\x28\xed\x87\x5c\xc3\xe5\x3d\xec\xdf\x24\x8d\xe9\xbd\x1c\x72\xc6\x30\x74\x01\xce\x27\xce\xc3\x7b\xf9\x7b\x39\x44\xe8\x35\xc3\x8c\x3f\x2e\x06\x89\xd2\x70\x4c\xa3\x39\x88\xda\x17\x94\xe4\xb0\x42\x2e\x1a\xa8\xdb\x73\xc2\x13\xac\xd6\x09\x9a\x8e\xc9\x64\x0e\x4e\x2d\xb8\x51\x35\x34\x6b\x94\x89\x71\x82\x39\x1e\xc2\xf2\x93\xf2\x75\xf2\xc8\xb1\x86\xb2\x81\x8a\x04\x85\x5c\x4e\x49\x12\x57\x52\x5a\x23\xc3\x27\xfa\x20\x69\x30\xa2\x0f\x6f\x06\x2b\x2a\xbd\x31\x93\x3b\x92\x13\x18\x3d\x58\x7b\x36\xaf\x4d\xdb\x87\x54\x2a\x98\x19\x62\x13\x92\xc2\xe2\x3e\x06\x19\xf9\xcb\x01\x82\x91\xc9\xd4\x11\x84\xd3\xcc\x0d\x60\x44\x39\xa7\x33\x4b\x18\xca\x08\x70\x4b\x30\x77\x70\x06\x41\x06\x27\x11\x4a\x6c\x00\xf3\x0c\x45\x10\x00\xe9\xba\x59\xe3\xa6\x9a\xa3\x97\xe9\x98\x7e\x42\xa5\x32\x12\x78\x18\x21\x56\xf3\x99\xbc\xd9\xac\x02\x02\xa1\x0b\x33\x08\xba\x84\x7c\xbb\x81\xda\x48\xc9\x72\xe2\x81\x08\xf3\x40\x33\x86\xe2\x11\x7a\x8e\x0a\x0a\x87\x88\x61\xb4\x31\x31\xa5\xac\xcf\x81\x83\x69\x25\xf1\x25\x6d\x86\x2b\x48\x8e\x6b\x58\xfc\x87\x6c\xe4\xee\x3b\x17\x28\x58\x69\xe8\x9c\x87\x39\x7f\x2c\xc8\x8b\xd3\xd8\x08\x5c\x13\x91\x25\xda\x04\x02\xe4\x29\x4d\x62\xcc\x8e\x14\x80\x47\x4a\xc8\x55\x2b\xba\x8e\x0d\x45\xb7\x30\x97\xe6\xe1\xe3\x87\x0c\x6c\x96\x07\xb5\xc6\x24\x49\x3c\xc0\x32\x9a\x13\xa9\x78\xaf\xf5\x60\xf0\x46\x35\x7e\x25\x11\x34\xc2\x17\x51\xf8\x21\xe5\xd6\xd2\xb7\x29\x77\xab\xf0\xbb\x16\xbc\xe9\x82\x09\x26\xe5\x54\x01\x56\x12\x7b\x6c\x16\x59\xbd\xd4\xd5\xdd\x38\x34\x02\x3b\xa4\x36\x4f\x61\x22\x5e\xaa\x10\x79\x1a\xab\x6d\x50\x53\x05\x2f\x07\xaa\x5a\xda\x3f\x42\x0c\x0e\x7e\xe9\x2c\x80\x59\xc9\xa8\x11\x16\xed\x3c\x18\x61\x9c\x06\x39\xe6\xc1\x98\xc1\x3b\x3e\xc5\xe0\x51\xce\x66\xc0\x94\x20\x21\x29\x7e\x15\xdc\xc0\x2f\x4b\x88\xa2\xe1\x14\x7c\x92\xe0\x1e\x94\x00\xe0\xef\x8a\x0c\x44\x80\xc1\x15\x8a\xf8\x2b\xd7\xb1\xde\x33\x94\xd9\x50\x49\xa7\xeb\x12\xa7\x4e\xdf\x55\x3d\x5a\xeb\xbc\x0a\x58\xea\xbd\x0f\x53\xad\x54\x5f\xce\x54\x6f\xbe\x7a\x3b\xa8\x24\x82\x8a\x00\xea\xc9\x7b\x4d\xdc\x5d\x08\x9c\xe7\xab\x98\x6b\x6d\x9e\x36\x1e\xd6\x77\xca\xf1\x88\xd2\x5b\x69\xc3\xd2\xf2\x69\xd3\x84\x6f\xc5\xb5\x5a\xb1\x52\x2e\x60\x56\xe6\xbe\x36\x40\x2b\x20\xb5\x72\x18\xe3\x8a\x3f\x2d\x16\x37\x6b\x5b\xbe\xcd\x55\xd1\xda\x4b\x37\xcf\x5e\x4d\x81\x2f\x0c\xfa\x90\x34\x18\x17\xff\xaa\x96\xf8\x56\x94\x68\x4b\x0d\x15\x7c\x73\x04\x66\x01\x6d\x8a\xc6\x2c\xc0\xf5\x91\x99\x05\xb0\x31\x4a\x33\xc1\x8b\xf5\x3c\x7c\x40\x09\x84\xde\x8d\xcb\x87\xc2\x4f\x9a\xa2\x22\x14\x2f\xd2\x3f\x83\x33\x52\x8b\xe8\x6b\xe0\x5a\x41\x12\x6f\x6b\xc2\xf4\x95\x91\x58\xca\xd2\x04\xfe\xd3\x89\x92\x6a\x60\x4e\xe2\xa4\x42\xe0\x2a\x52\x2a\x1c\x6e\x62\x65\xc0\x60\x2b\x5a\x06\x14\x42\xbc\xde\xb4\x40\x60\x2d\x62\x2a\x1c\x0c\x84\xc4\x1c\xe3\x37\x61\x90\x79\x44\x57\x24\x46\x79\x13\x2d\x4c\x7e\xba\x50\x8e\x77\x06\xa9\x53\x0d\xd4\x59\xf2\x94\xb3\xf5\x90\x3e\x15\x9e\x69\xa9\xd8\x0d\xd1\xb3\x09\x85\xde\xe3\xbf\xe6\x88\x71\x88\x0f\x63\x58\x3f\x38\x65\x72\x93\x3a\x7f\xcc\x39\x9e\xd9\x75\x66\x72\xbc\x97\xc3\x31\x39\xe0\xda\x41\x83\xca\x85\x88\x73\x54\x6c\x99\x36\x5a\x35\x1d\x16\xd0\x19\x57\x24\x06\x0f\x7b\xd9\xa4\x41\x2a\x7d\xa4\xf6\x1a\x88\x0f\xc3\x14\x62\x9b\x8b\xff\x43\x36\x07\x75\x29\x58\x34\xcf\x9e\x59\x84\xdb\xa0\x59\x48\xb0\x98\x89\x35\x92\xb5\x4c\x32\x80\x72\x3c\x84\xd0\x72\x3d\x8d\x5c\x27\x53\x28\x5a\x86\xa2\xa5\x22\xa9\xac\xe9\xeb\x69\x84\xf8\xf8\x00\x84\x78\xd3\xf4\xbe\xe9\x4d\xaf\xce\xf4\x4e\xe9\xfd\x7a\xcd\x43\x20\xcb\x35\xf0\x03\x0f\x38\x0d\x48\x54\xdf\x5e\xd1\xf4\xb9\x47\x36\xd8\x52\x07\x3a\x64\x83\x73\xe0\x53\xb9\x87\x57\x4c\xa7\xb7\xc3\x7a\x3b\xbc\x41\xaa\x17\x6f\x8b\x3b\x2e\xcc\x9b\xb6\xf8\x6d\x6f\x8b\x35\xb6\xf8\xdb\x8f\xaf\x32\x7b\xfd\xf2\x0c\xae\x55\xbc\xd8\x1d\x19\xfd\x47\x2f\xa3\xba\xcd\x99\x39\x38\x05\xb2\x66\xa4\x74\x17\x46\x28\xc7\x71\x40\xd3\x62\x3b\x26\x9b\x73\xcc\x82\xcb\x9f\xf9\xcb\x93\xe0\xb7\xdd\x96\x60\x85\xcb\x20\x4b\x95\x43\x04\x1c\x2b\xab\x7c\x7a\xaf\x41\xe1\x35\x28\xc8\xf4\x32\xfd\x84\x8e\x4b\xf0\xa6\x0d\x56\x54\xab\xdb\xce\xfa\x70\xcc\xf1\xef\x29\x12\x61\x5a\x0c\x91\xda\xb8\xd8\xe1\x16\xe4\x7a\x79\xd6\xf7\xcf\x6e\xcb\xee\x39\x9d\x8d\x68\xb5\x65\x17\x15\x4f\x23\xfa\xa0\xad\x1a\x6b\x9a\x79\xb7\xe4\xd7\xb6\xf4\xc5\x84\x64\x46\xe3\x82\x0a\x8a\x43\x08\xbe\x18\x49\x1c\xca\x4c\xbe\x8b\x84\x35\x57\xcc\xd6\x79\x67\xa8\x90\x35\xf4\xd4\x28\x44\xa2\x55\x5d\x90\x70\x92\x5c\x81\xa5\xc0\x0c\xb3\xa2\x30\xb8\x14\x28\xf8\x95\x95\xbf\x16\x25\xbd\xc7\x4d\xdd\x03\x6a\xd0\x1c\x46\x46\xe0\x8f\xe5\x4d\x4d\x57\x1b\x2f\x54\xaf\xe8\xba\x58\x75\xaa\x17\x8d\xfd\x1d\xd9\x76\xd8\xa8\x80\xfb\xb5\xaa\x76\x3c\xb2\xd1\x58\xa6\x97\xb2\xb6\xee\xc4\x36\xad\x10\xa7\xab\xd6\x69\x65\x88\x1d\xb4\x4f\x6f\x7a\xfb\xd4\x19\xfb\xd4\x71\xcf\x49\x11\xb7\x46\x53\x1c\xdd\x86\xf3\x2c\x86\x70\x2d\xef\x43\x56\x7d\xa2\x7b\x8d\x50\x1e\x66\x60\x9f\xc4\xd8\xaa\x4a\xa3\x3b\xc1\xeb\xfb\xbd\x5e\x55\x77\x19\xb1\x9e\x17\x42\x1b\x8c\x29\x0b\x4a\xc1\x7d\x79\xc1\xea\x93\xc9\xaa\x99\x28\x46\xe0\xf2\x4c\x86\x3c\x6e\x69\x3a\x34\x60\x23\xed\xaa\x02\xd5\x0a\xba\xad\xa4\xef\xa2\x9e\x0e\xbc\xc6\xd8\xb3\x7c\x4c\x2f\xd9\xf2\x92\x0d\x8b\x80\xd6\x9b\x6d\xfd\xf9\x02\x13\x7d\xda\x14\x17\xeb\x0a\x44\xfa\xe2\xe2\x4e\x14\x17\x3b\xc5\x79\x5e\x75\xf9\x3a\xe0\x6e\x97\x35\xaf\x9e\x12\xf8\x6b\xdf\x8c\x70\xe7\x8a\x9a\xdb\x20\x68\x55\xd4\xec\x9c\xc6\x68\x25\xe2\x2a\x04\xbb\xaf\x86\xbe\x8e\x18\x4d\x12\x1c\xaf\xde\x1b\x90\x97\xbf\xc9\x73\xf8\xa6\xaa\x7c\xe5\xa4\xbb\x14\xeb\x6d\x23\x11\xe5\xcc\x45\x15\x12\x47\x8b\x53\xa1\xf1\x4c\x08\xdd\x30\x8c\xff\x4d\x70\xc9\x50\x0e\x4f\x77\xf0\xb4\x71\xa3\x88\x13\x11\x7c\xb8\xaa\x42\xe4\xc9\x59\x15\xaa\x5a\x86\xb0\x9c\x5e\x1b\x9c\x53\x8c\x62\xcc\xf2\xb0\x9a\xaf\x53\xc8\xa6\xc2\x58\x6e\x64\xe7\x18\xb1\x22\x0a\x71\xc7\xb7\x96\x7a\x60\xf4\x7e\xb8\xb8\x2b\x64\xf3\x56\x91\x0d\x2e\x87\xc5\xa1\x8c\x95\xb6\x0e\x79\x48\xd1\xaf\xfa\x78\x78\x8e\x13\x1c\x49\x67\xb1\x11\x85\x4e\x32\xaf\x2b\x1c\x4a\xf1\x0c\xdd\xfa\xb0\x4a\xd1\xea\xfb\xf0\x4a\xd4\x96\xfd\x5a\x44\xbf\x8b\x96\x56\x8a\x6c\xab\xf0\xa2\xa5\x56\xe9\xcf\x65\x8a\x7b\x8d\xb6\x32\xed\xdd\x64\xcb\x2b\xdc\x9b\x61\xb4\xf6\xc2\x17\x89\xd7\x45\x9e\xdd\x66\xa9\x9e\xa9\x5d\xbe\xfb\xad\x1d\x17\x45\x17\x2e\x79\xef\x3a\x90\x77\xfe\xbb\x42\x65\x9d\x07\x5f\x42\xd8\x4b\xca\xb6\xc5\xd4\x0e\xe1\xb3\x66\xec\x9d\x22\x69\x1d\x12\xfb\x88\x5a\x87\xc1\x3a\xb2\x5e\x52\xe4\x79\x32\xa5\xab\x21\xcb\x5e\x9f\x88\xbb\xf3\x4a\xef\x6f\x20\x71\x3e\x41\x6d\x42\xe6\xe6\xc4\x0b\x0c\x9e\x5e\x9f\xbc\x09\xa8\xe4\xa3\xf8\xbf\x2c\xb8\x47\x71\xec\xe1\xf3\x95\xf9\xc7\x09\xbf\x1d\x02\x82\x36\x3e\x50\x17\xbd\x47\x86\x23\x4c\xee\xc0\x13\x88\xf1\x18\xcd\x13\xde\x1e\xe3\x3c\x2f\x4e\x35\xd0\xe8\xd6\x03\xd5\xba\x07\x93\x90\xe8\x76\xd3\x83\xd9\x64\x68\x58\xb5\x72\xf2\x5b\x6c\x17\x03\x3b\xb3\xab\x22\x83\x97\xe9\x55\x21\x72\x37\xbf\x2a\x2c\xce\x26\x58\x20\x69\x36\xc3\xb2\x99\x85\xa6\x6e\x5d\x9b\x71\x4c\x78\x3b\x75\x2e\x30\x74\x42\x9f\x73\x9c\x16\xdc\xb9\xdb\x46\xa0\xd5\xdb\x86\xa5\x78\xf4\xc6\xc1\x0e\xcb\xd2\x38\x58\x6f\x87\x77\xdc\x38\x30\x3c\xa3\x77\x4d\x47\x0a\x04\x4e\xbd\x79\x90\x37\x6f\xf6\x06\x42\x8f\x6a\xaf\x0d\x84\x14\x91\xde\x44\xd8\x61\x59\x9a\x08\xcb\x9a\x52\x81\x64\x6b\x26\xe2\x80\x42\xe4\x27\x3b\x31\xdb\x95\x02\x8d\xbd\xdb\x1b\xdc\x49\x81\xc6\x4f\xdb\xac\x7d\x5f\xa0\xd1\xa8\x23\xee\x05\x1a\x6a\xda\x98\x2e\x8c\x95\xb2\x0f\x1c\xb4\xb8\x1d\x76\x53\xe2\x6d\x2e\x84\x7d\x96\x3b\xf3\x5a\xd4\x0f\xb5\xbf\x42\x13\xba\x0b\xad\x6e\xc3\xd4\xb0\xd7\xc0\xad\x66\x16\xad\x66\xfe\x3a\xcb\x9e\x27\xbd\xd2\x50\x57\x37\xd7\x57\x1d\xf5\x55\x47\x1d\xae\x3a\x6a\x2e\xe5\x30\xdd\xb7\xb4\x4b\x7f\xc3\x17\x45\x5f\x8a\xd4\xa1\x52\x24\xf7\x02\x16\x9f\x7d\x28\x4d\xe1\xca\xca\x27\xe9\xac\x67\xdc\xa1\x3a\xa4\x5a\xa5\x4a\x31\x1f\x5f\x64\x0c\x53\x16\x83\x4b\xd2\x7a\x72\x6d\x2a\x53\xea\x79\x9a\x02\x89\xc7\xe9\xba\x4d\x57\x88\xd2\x84\x93\xac\x42\x64\x79\x3b\x42\xd0\xbe\x5c\xc5\xa9\x54\x65\x58\xe1\x6d\x2c\x32\xd8\x69\x1a\xb0\xb9\xe4\xa3\xe9\x5e\x27\x81\x77\x93\x99\xe4\x7f\x62\xc3\xb2\xb8\x7c\x03\xfe\x6f\x95\x3e\xd1\x97\x8e\x5c\xc8\x6f\x36\x7e\x68\x95\xd2\x2b\x72\x58\xee\x9a\xa0\x9c\x34\x65\x3c\xac\x2e\x3b\xdd\x12\xbe\xf2\x56\x5b\x12\x3b\x65\x8f\x6c\xe5\x41\xb4\x34\x17\xc7\xd0\xc9\x24\xc1\x8a\xf2\x18\xf1\xbb\x75\x39\xd0\x5a\x82\x51\xc2\x6e\x24\x18\xc1\xa0\x25\x05\xe5\x48\x75\x75\x4b\x1c\x56\x0d\x77\x58\x58\x15\xb8\x97\xee\xd4\xca\x76\x44\x8d\x1c\x16\x1c\x72\x2a\xdc\x71\x2b\xda\x79\xea\xda\x9a\x5d\x1a\x95\xa6\x8b\x3b\x05\x5e\x6b\x43\xf0\x71\x29\x3b\xa2\xed\x81\x18\x04\x87\x1d\xa7\x2d\x1a\x04\x6d\xb5\xdc\x3b\x4b\xd5\x6c\xad\x6e\x7e\x55\x72\xdd\x56\xb6\x66\x44\x7b\x92\x92\x3e\x36\xf9\x0b\x87\x93\x93\x2e\x7d\x93\xa3\xcf\x24\x97\x1f\x96\x5e\x59\xdf\xfa\x4c\xb5\x01\xb2\xd3\x9f\x2a\xb2\x4a\xa3\xbb\xe7\x58\xdb\x65\xc4\x3b\xfb\x19\x19\xc3\x6d\x93\x56\xca\xf0\x44\xfc\xea\x70\x3a\xfd\x9f\x5d\x65\xad\x7b\x3a\x7d\x33\x1f\x45\x67\x74\x82\x53\x4c\x6d\x32\x23\x6d\x72\xf1\xba\xe5\xa8\xcf\xc5\x77\x22\x17\xbf\xef\x19\xf1\xe7\xba\x22\xa1\xcf\x88\xf7\x19\x71\x75\x0b\xe5\x87\xc8\x57\x32\xe2\xf0\x54\x9d\x63\x53\x7f\x33\xdd\x9a\x00\x1d\x4a\x90\x67\xe4\x01\x27\x79\x88\x46\x45\x61\x5a\xf1\xe1\xd0\xdc\x25\xf5\xab\x46\x06\x96\x09\xd8\xd3\x16\x99\xb8\x87\x46\x0a\x6c\x0b\x2c\x42\xdd\xda\xa3\x91\x1f\x8d\x1f\x9c\x99\xbf\x79\xef\x8b\x1d\x45\x11\xce\x78\x1e\x0a\x47\xd6\x61\x37\xe0\xe5\x04\xbf\xa6\x93\x4f\x87\x13\xfc\x7e\xc2\x63\xca\x16\xf7\xc8\x97\x97\xca\xdb\x4a\x56\x1f\xf9\x76\xee\x12\x1d\x5d\x95\x61\xef\x42\x77\xc2\x85\xee\xcb\x59\xc4\x5b\x0f\xe7\xfd\xb9\x52\x95\xbd\xf3\xde\x3b\xef\xea\x16\x6e\xce\x7b\x8c\x17\xb7\x73\xf4\x0e\xfc\xa1\x3b\xf0\x35\x59\xe8\x9d\x78\x75\x2f\xcd\x4e\xbc\xe9\x2b\x51\x87\xe3\xc4\xff\x48\x83\xa5\x4c\x95\xbe\x7c\xef\xc4\x37\x41\x3e\xf9\x41\x0b\xbf\xed\x10\x43\x2d\xd1\x13\x6f\x5f\x95\xd6\x4a\x55\x9c\xd9\x89\x9d\x0e\xc3\x27\x56\xe5\xc0\x9f\x66\xff\xca\x58\xfc\xf5\x9c\xfb\x57\x59\x82\x22\x3c\xa5\x49\x8c\xd9\xd1\x56\x24\xc6\x09\xa1\x8a\xc4\x6a\xf2\x7a\xd9\x07\x77\xbb\xe0\x6c\x0f\x14\x2c\xa8\xcd\xb3\x4e\x7a\xf3\xb6\xe1\x66\x5c\xe3\xa5\x48\xbe\x4a\xe4\xb3\xcf\xa9\x5a\x71\x3b\xa1\xfd\xd6\x71\x46\x2d\x3c\xb0\xba\xb3\xc7\x25\x2b\xa3\x38\xb0\x0f\x83\xa3\x4c\xe7\xf4\x3b\xd4\xaa\x08\x34\xce\x99\x83\x2d\x65\x7b\x7c\xc0\xfd\x4e\xcf\xd7\x98\xeb\x72\xd3\x93\xfd\x19\x79\xc9\x15\x87\xd3\xf1\x2f\xc8\xe9\x79\xe6\xcc\xa5\x42\x47\xc8\x6c\x2b\x3a\x72\x39\x3b\x10\x1d\xb1\x16\x73\x49\xd8\xc3\x14\xf3\x0e\xfa\xf6\xd6\x34\xf1\xa3\x87\x97\xca\xef\xba\x3c\x4a\xf5\x35\x96\x6e\xb8\x0d\x76\x5f\x5a\xd9\x2b\x6f\x43\x77\xd6\x43\x6d\x43\xc5\x35\x40\x51\x42\xdd\xf5\x73\x0f\x6d\xa6\x1f\xf7\x55\xa0\x8e\x97\xf8\xd8\x5b\x6b\xc1\x8a\xc3\x34\xd6\x1d\xac\x23\x7e\x36\x63\xbd\x95\xb2\xe5\x3d\x0a\xba\x35\x69\x93\xe6\xa0\x7b\x7d\x8e\x2b\x2f\x97\x2f\x4e\x8e\xc4\x59\xd1\x31\x8a\xf0\xd9\x1f\xff\x0f\x00\x00\xff\xff\xca\x7f\xde\x79\xb6\xab\x00\x00")

func assetsConfigGladeBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigGlade,
		"assets/config.glade",
	)
}

func assetsConfigGlade() (*asset, error) {
	bytes, err := assetsConfigGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config.glade", size: 43958, mode: os.FileMode(436), modTime: time.Unix(1516807177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsProxyGlade = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\x5f\x93\xda\x38\x12\x7f\xe7\x53\xe8\xfc\x98\x0b\x30\xcc\x6c\x92\xd9\xbd\x19\xb6\x76\xeb\x36\xa9\x54\xed\xed\xa5\x6a\xb2\x77\x8f\x2e\x61\x0b\xac\x1d\x61\xf9\x24\xf1\xef\xdb\x5f\x5b\x36\x0c\x60\xc9\x96\x6d\xc8\x00\xa1\x52\x95\xd8\x58\xdd\x92\xba\x7f\xdd\xea\x96\xe5\xce\xc3\xcf\xcb\x29\x43\x73\x22\x24\xe5\xf1\xa3\x37\xe8\xdd\x78\x88\xc4\x01\x0f\x69\x3c\x79\xf4\xfe\xfc\xfa\xb1\x7b\xef\xfd\x3c\xec\x3c\xfc\xad\xdb\x45\x9f\x48\x4c\x04\x56\x24\x44\x0b\xaa\x22\x34\x61\x38\x24\xe8\xae\x37\xb8\xef\xdd\xa1\x6e\x17\x1a\xd1\x58\x11\x31\xc6\x01\x41\x21\x9f\x62\x0a\xfc\x12\xc1\x97\xab\x20\xc2\xf1\x84\x08\x6f\xd8\x41\xe8\x41\x90\xff\xcd\xa8\x20\x12\x31\x3a\x7a\xf4\x26\xea\xf9\xef\xde\x4b\xf7\xc0\xec\xd6\xeb\xeb\x76\x7c\xf4\x17\x09\x14\x0a\x18\x96\xf2\xd1\xfb\xa4\x9e\x7f\x09\xff\x9a\x49\x35\x25\xb1\xf2\x10\x0d\x1f\x3d\xbc\xb9\x1f\x68\xce\x40\x03\xbd\x25\x44\xa8\x15\x8a\xf1\x94\x3c\x7a\x8c\x2f\xd2\x5e\x07\x0f\xfd\xf5\x03\x73\xbb\x59\x92\xa4\xed\xde\xbf\x7b\x77\xf7\xae\xaa\xed\x1c\xb3\x19\xf1\x86\xf7\x37\xf7\x37\x55\x4d\xa5\x22\x89\x4f\xe3\x40\x10\x3d\xe8\xea\x71\x24\x78\x42\x76\x08\xf6\xba\x78\xe8\x67\x42\x31\xcb\xe7\x2b\x59\xaa\x5f\x67\xe3\x31\x4c\x45\xcb\x47\xc1\xfd\x48\xdf\xfb\x5a\x0b\x3e\x0e\x14\x9d\x83\xfa\x7c\x19\x08\x9a\xa8\xb5\xd0\x24\x9d\xc4\x98\xe5\x43\xc8\x54\x15\x7a\x08\xfe\x0d\x19\x11\x8f\x1e\x8f\x7d\x3b\xa7\x4d\x73\xb9\xc0\x20\x44\xe8\x35\xe6\xb9\xfe\x4a\xc7\xfa\x4f\x8a\x19\x9f\x64\xe3\x0c\xf5\x75\xc6\xd9\xa2\xc8\x00\xc7\xfe\x98\x07\x33\xe9\x0d\x3f\x62\x26\x49\x95\x20\xd5\x2a\x21\x7e\x44\x53\x19\x66\xdc\x0b\x04\x41\x44\x59\x88\x34\x5e\x61\xf2\x5d\x7d\x0b\xca\x1d\xf1\x65\x3e\x04\xd3\xa8\x7f\x85\xa7\x5b\x43\xee\xa6\xcd\x07\x9b\xf6\xf5\x87\x6d\xa2\x99\x62\x31\xa1\xb1\xcf\xc8\x18\x06\x5f\x40\x63\x09\x85\xa0\x93\xa8\x26\x89\xe2\x49\x3d\x82\x11\x57\x8a\x4f\x1d\x69\xb8\xa0\x80\x62\xac\xc0\xb0\xbd\x21\x58\xb8\xa2\x01\x66\x2e\x84\x32\xc1\x01\x78\x1f\x5b\x37\x66\xd5\xa5\x90\x04\xa8\x62\x41\xf0\x96\x46\x8c\x5a\x9c\xc1\x24\xe2\x7d\x5d\x6e\xd1\x0f\x76\x18\x34\x53\xab\xd1\x1d\xe1\x15\x9f\x29\x5f\xaa\x15\x03\x0f\x42\xe2\xd0\x4a\xa8\xe7\xb4\xfb\x9b\x7d\x26\xd9\x34\x46\xfa\xda\xe7\xcf\xde\x3e\x9d\x69\x20\x23\xc2\xbc\x21\xf8\xde\x2e\x7f\xb6\x0d\xc2\x44\x38\xa7\x92\x8e\xd2\xc1\x7f\x15\x33\xeb\xb4\x2b\x44\x56\x97\x54\x90\x80\xd0\x39\x91\x7e\x48\xc6\x78\xc6\x54\x7d\x0e\x33\x09\x2e\x4f\xf1\xe0\xd9\x81\x74\xd7\x19\x32\x1a\x3c\xef\x3b\xc3\x8d\xa0\xfd\xcd\xe3\x82\xf3\xdb\x61\xb9\xe5\x08\x77\x47\x89\x83\x67\x80\x79\xf5\xf8\xc9\x32\x81\xfe\xeb\xcf\x7b\x4c\x19\xab\x4f\x95\x70\x49\x33\x9b\x2d\x2c\x70\xdb\x93\x32\x8e\xfe\xa1\x6f\x40\x6e\x0b\x34\x03\x6c\x82\x14\xa9\x75\x10\x9d\xd1\x5c\x51\xbd\x4d\xea\x8c\xea\x4c\x78\x17\x8f\xec\x42\x24\xb6\x3d\x29\x57\x64\x9b\xa6\x6f\x9e\xba\x6d\xda\xb5\x56\x8f\x6c\xce\xb5\x48\x2a\x4d\xd9\x30\xd9\xc2\x44\x8b\xe6\x5b\x34\xdd\x3f\xb8\x22\x23\x0e\x6b\x8f\x36\xde\x38\xbf\xab\x5a\x47\x9d\xec\xae\xa1\xcd\xed\x93\x45\x2e\x50\x2b\x0c\xd0\x89\xc8\xd5\xbd\xad\x03\x8e\xbd\xa0\xb1\x95\x74\x2a\x24\x54\x8a\x16\x13\xad\x73\xcc\x56\x3e\x7b\xb3\x04\x3e\x0a\xe8\x23\x93\xc1\x38\xbd\x34\x49\xa1\x95\x24\xda\x4a\xc3\x44\x5f\x1d\x8f\x3b\x50\x97\xc5\xe6\x0e\xe4\xf6\x38\xdd\x81\xb8\x34\x66\x2f\xa3\x77\x32\x19\xab\xce\xda\x10\xeb\xd5\xdc\x5f\x62\x06\xcb\x56\x69\x18\x62\x26\x97\x11\x0e\xf9\xc2\x4f\x93\x40\x6f\x48\xe3\x4a\x72\x2b\x84\xf5\xd3\x02\x8c\x3f\x09\x1a\x66\x28\x9e\xc0\x95\x0d\xc4\x46\xa1\xd4\x01\xb2\x89\x41\x5d\x30\x9b\x78\xd4\x03\x74\x09\x07\x57\x50\x97\xb0\x70\x03\x76\x09\x03\x67\x70\x9b\x78\x08\x00\x49\x79\xae\x59\xc5\x21\xe0\x6c\x36\x8d\xeb\x32\x29\xc5\x9b\x6e\x51\xc0\xdc\xef\x3a\xbe\xd5\xa0\xd3\xc6\x71\x57\x82\x3a\xd3\x40\x6b\x23\xcf\x38\xdb\x06\xe8\x33\xf1\x89\x72\xc3\x2e\xc9\x80\x2b\xe7\x93\xb3\x90\x0a\x0b\xd5\x94\x49\x96\x34\x20\x25\x70\x2c\x19\x56\x18\x04\xf4\xe8\xad\x08\x4c\xef\x29\xe2\x42\xe9\x56\x6e\xbc\x6d\x91\xf0\x6e\xef\xb6\xa8\xb8\x74\x8c\x60\xa6\x3e\x56\x0a\x07\x91\x83\x27\xb4\x71\x01\x3b\xab\xcb\xc4\x12\x07\xef\x36\xa9\x40\x72\x13\xa4\xff\x16\x2b\xb1\xca\x90\x4e\xd2\x4b\x5f\xb2\xd9\xe4\x95\xd1\xde\x86\x4d\xad\x55\xd4\xc6\x24\x61\x38\x20\x11\x67\x21\x11\x7a\x33\xb6\x02\xb4\x6f\x11\x23\x78\x4e\x10\x99\x26\xc0\x42\x71\x84\x67\x8a\x4f\xf2\xcd\x7b\xe7\x31\xec\x24\x8d\xeb\x1d\xdf\x76\x7b\x21\x3b\xfc\xbf\x8d\xcd\x94\xa4\x7a\xe5\x5c\xce\xc8\x66\xf6\x57\x87\x1f\xae\xab\xc3\x31\x57\x87\x3f\x2e\x72\x5d\x70\x34\x94\x93\x59\x17\xd2\x19\x5c\xd7\x05\x87\x75\xc1\x1d\xae\x57\xa7\x7f\x46\x06\xb1\xef\xf4\xdf\x5d\x9d\xfe\x31\x9d\xfe\x2f\x61\x28\x88\x94\x97\xe7\xf7\x6f\xcf\x0b\xe6\xef\xaf\x30\x3f\x26\xcc\xbf\x70\x57\xae\xe7\x84\xf1\xbb\xf3\xc2\xf8\x87\x2b\xc6\x8f\x89\xf1\x3f\x65\x7a\x72\xe4\x12\x63\xf8\x1f\xce\x0b\xe7\xf7\x57\x9c\x1f\xd5\x97\x83\xdc\x17\x5c\x38\x0e\xef\x9c\x70\xee\xb4\xcf\x7e\x3a\x38\xff\xf1\x8a\xf3\x63\xe2\xfc\xb7\x65\x40\x92\xf4\x95\xf5\x05\x46\xe7\xef\x4f\x1b\xe9\x85\x5d\x19\x9c\xa5\x49\xd7\x8d\x19\x87\x8d\x99\xcf\x5f\x10\x17\x28\xe2\x52\xb9\x47\x23\xd7\x2d\x9a\x33\xca\x5d\x0b\xd6\x31\xcb\x23\xcf\xab\x79\x38\x98\xc7\x3a\x4c\x7f\x8b\xe8\x18\xe1\x78\x75\x35\x10\x37\x2e\x67\x94\x10\x3c\x25\x34\xde\x3e\xf6\x2b\xe1\x3e\x57\x4d\xc2\x85\xfa\xde\xcd\xe4\xe5\x0b\x27\x6f\xb8\xf5\xb5\xd3\x49\x45\x39\x07\x81\xe9\x89\xef\xcf\x3c\x05\x82\x33\x46\xc2\xff\xd2\x38\xe4\x8b\x1c\xaa\xf9\x6f\x0b\xfd\x5b\xd9\x29\x30\xd3\xe4\x2f\x0e\xaa\xb5\xce\xfb\xd9\x98\xd4\x3c\xb8\xb7\x61\x53\xa9\x52\xdd\xca\xf8\xc1\xdc\x7f\x28\x59\xbc\x7c\x2e\x37\x87\x3b\x9f\x6c\xd2\x89\x0a\xa5\x1a\xe5\xd0\x44\xb1\x26\x46\x0d\x95\x6b\x62\xa5\x38\x67\x8a\x26\xf6\x95\xf6\x77\x2a\x15\xe2\x63\xf4\x32\xf3\xb7\x88\xc7\x04\x01\x13\xc4\x68\x4c\xfe\x81\xc6\x10\xa8\x92\x25\x9e\x26\x8c\xfc\xd4\xe9\x0c\x6e\x3f\xf4\xde\xe8\xbf\x6f\xe0\xcf\xa0\x7f\xdf\xc9\x9f\xf5\x02\x3e\xed\xbc\xe9\x6d\xdd\xb5\x19\x77\x42\x97\x84\x49\x1f\x8f\xf8\x9c\xf8\xe9\x38\xa4\x73\xe6\x5f\xca\x10\xf2\x48\x40\xd9\x21\x18\x6a\x4f\x98\x1d\x45\x6c\xc9\x49\x1f\xa6\x3c\x0c\x2b\x1c\xa4\x5a\x94\x3e\x68\xb8\x66\xea\xef\xb6\x68\x38\x38\xd9\xf3\x5a\x7d\x4e\x3c\xc7\xde\xdf\x4d\x1a\xdc\x5c\xb7\x93\x8e\xb9\x9d\xf4\x2f\xac\x40\x4b\xf1\x04\x7d\xfe\x72\x81\x1b\x4a\x1f\x4e\x1b\xec\x85\x94\x79\x9a\x6b\xc3\xa7\xc9\x39\xef\x2a\x39\xaf\xc1\xd3\x2d\xf4\xbd\x45\x92\x24\x38\xab\xb8\x30\x5a\x21\x58\x4e\xa7\x58\xf6\xd0\x67\x9d\x0e\x43\x03\x44\x63\xa4\x22\x92\x3e\x48\x66\x0a\x16\x6b\x4d\x4c\xe4\xfa\x31\x03\x9e\x40\x1a\x11\x01\x49\xb4\x8a\xa8\x44\x49\xfa\x91\x3d\x5a\x50\xc6\xd0\x88\x00\x19\x41\x3a\x3f\x26\xbd\x4e\x07\xfa\x43\x30\x59\xf8\x1d\x11\x99\x90\x80\x8e\x29\x09\xd7\x3d\x8c\x21\xd6\xe5\x8b\x74\x58\x10\x09\x40\x2f\xf2\xa7\xce\xe0\xc7\xdb\xde\xe0\xfd\x7d\x6f\x00\x01\xc0\xdd\xed\xd6\xed\x4d\xff\xd6\x31\xed\x7c\xcd\xdd\x85\xfa\x56\x7e\xdd\x59\x38\x23\x3f\xb2\xfd\xb5\xdd\xed\x59\xad\x97\x0d\x93\x99\x82\xe3\x4c\xf2\xb7\x7f\x17\x92\xc4\x34\xf2\x0c\xd6\xc9\x51\x46\xd5\xaa\x76\x74\x5c\x64\x46\xe3\x5c\x56\x69\x25\x14\xe1\x0d\xdf\xb4\x4a\x4f\x5c\xfc\xd6\xfa\xa5\x6e\xdd\x5d\x51\xdd\xe1\x91\xfd\x97\xee\xc3\x29\x83\x70\xf5\x63\x26\x31\x39\x7d\x3d\xed\xc2\xc8\xed\x2b\xf2\x2a\x2e\x4e\xf5\x12\x0a\x4c\xaa\xdd\x62\xd6\xcc\xc1\x1b\x34\xde\xfe\xe0\x93\x09\x23\xdb\xdb\xaf\x4a\xff\x92\x23\x40\x46\x90\x24\x5f\x98\x13\xa9\x5f\x75\xa1\x8a\x63\x65\x5c\xf7\x04\x62\xec\x47\x34\x24\x28\xa9\x75\x1c\x23\xef\x6e\xc7\x62\x33\xfd\xec\x17\x67\xb2\x2a\xcd\xdf\xb4\xaf\x65\xc1\xae\x88\xd2\x2d\x0b\xa8\xfa\x3c\xc5\x93\xfc\x23\x6f\x9a\x5e\x56\xed\x8c\xda\x04\xdb\x18\x3e\x26\x66\x4d\x17\x63\x1b\xbf\xbc\xee\x46\x5a\x6e\x44\x90\xf4\x33\xf9\xae\xe2\x5d\x89\xe7\xa4\x96\x72\xdd\x9d\xa5\xa3\x27\xf8\xae\xbd\xaf\x73\x54\x7b\x48\xef\x7b\x4e\x11\xfb\x37\x3b\x34\x55\x2e\x94\x52\xe2\xbc\xb8\x57\xfa\x06\x60\x53\xd4\xc7\xd6\x4b\xe5\x46\x59\x59\xdc\xdf\xda\xdd\x1c\xc2\xc5\xec\xf3\x00\xd3\x0a\x1b\x7e\x89\x6e\xdf\xce\xca\x8a\x36\x96\x16\xf1\xc8\x59\x36\x55\x5b\x19\x61\x39\xf8\x5b\x39\x97\xe6\x0e\xa5\x71\x08\x57\x62\x1b\x16\xf9\x98\x65\x53\x52\x27\x2b\xc7\xbe\xde\xbc\xdf\xe7\x55\xbd\x35\x7c\xaa\x75\x65\x5a\xc0\xb3\x7d\x95\x29\xe8\xce\x77\xa8\x9e\x64\x55\x6f\xab\xaa\x66\xfb\x45\x6f\x4c\x4e\xe9\x24\x54\xe4\x5e\x17\xc4\x42\xe9\x52\x0f\xc4\x42\x5a\x5d\x07\xc4\x42\xe8\x54\xff\xa3\xf1\x56\x42\xe3\x97\xdc\x46\xf8\xbb\x15\xb4\x69\xf1\x4e\xbc\x4e\x2d\xa6\xea\x23\x0d\xb6\xd5\xb3\xd5\xca\xd9\x32\xb7\x6b\x8e\xd9\x12\xea\xb3\x2c\xce\x74\xe4\x1a\x47\x96\xa3\x11\x49\x49\x1d\x61\x97\x51\x1f\x32\xca\x6a\xca\xc2\x74\xaa\xc0\xe9\xfc\x91\xcb\x69\x82\x46\x8c\x76\x4e\x11\x34\xe2\xb0\x7b\x7a\xa0\x11\x8b\xac\xbe\xb3\x37\xac\xaa\x1a\xfd\x2a\x71\xa4\x95\xc8\x31\x5f\x70\xc8\x15\x6c\x2f\xd5\x8f\xe5\xee\x1a\x85\xb8\x8e\x09\x82\x7b\xf4\xf5\xef\x38\x7f\x25\xb8\xd6\x32\x72\xd1\x72\x6d\x45\xb5\x8f\xe1\x0e\x5c\xbb\xf3\x30\xd1\xf6\x19\x86\xdb\x4f\x15\xea\xfd\x46\x9a\x7a\xdd\x20\x7d\xeb\x45\x4b\xff\x20\x50\x69\xc4\xf0\xc4\x86\xf5\x2a\xe5\x6c\xeb\x54\x63\xad\x04\x96\x01\x19\x7b\xf3\xdc\x9d\xe3\xd6\xc3\x97\x07\x0f\xfd\xcd\x7f\x62\x31\xec\xfc\x3f\x00\x00\xff\xff\xce\xd9\xc3\x37\x1d\x63\x00\x00")

func assetsProxyGladeBytes() ([]byte, error) {
	return bindataRead(
		_assetsProxyGlade,
		"assets/proxy.glade",
	)
}

func assetsProxyGlade() (*asset, error) {
	bytes, err := assetsProxyGladeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/proxy.glade", size: 25373, mode: os.FileMode(436), modTime: time.Unix(1516797817, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config.glade": assetsConfigGlade,
	"assets/proxy.glade": assetsProxyGlade,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config.glade": &bintree{assetsConfigGlade, map[string]*bintree{}},
		"proxy.glade": &bintree{assetsProxyGlade, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

